---
- name: Install RPMFusion Free
  become: true
  dnf:
    name: "{{ RPM_FUSION_URL}}/{{ RPM_FUSION_BIN }}"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - rpmfusion-free

- name: Install RPMFusion NonFree
  become: true
  dnf:
    name: "{{ RPM_FUSION_NONFREE_URL}}/{{ RPM_FUSION_NONFREE_BIN }}"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - rpmfusion-nonfree

- name: Install basic apps in the system
  become: true
  dnf:
    state: present
    name: "{{ item }}"
    update_cache: true
  loop: "{{ base_apps }}"
  tags:
    - base_apps

- name: Install desktop tools
  become: true
  dnf:
    state: present
    name: '{{ item }}'
    update_cache: true
  loop: '{{ desktop_tools }}'
  tags:
    - desktop
    - desktop-tools

- name: Install desktop apps
  become: true
  dnf:
    state: present
    name: '{{ item }}'
    update_cache: true
  loop: '{{ desktop_apps }}'
  tags:
    - desktop
    - desktop-apps
    - non-third-party

- name: Create Symbolic Link for snapd
  become: true
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    owner: root
    group: root
    state: link
  tags:
    - desktop
    - desktop-tools
    - snapd-link

- name: Install snap apps
  community.general.snap:
    name: "{{ item }}"
  loop: "{{ snap_apps }}"
  tags:
    - desktop
    - desktop-apps
    - snap

- name: Install snap classic apps
  community.general.snap:
    name: "{{ item }}"
    classic: true
  loop: "{{ snap_classic_apps }}"
  tags:
    - desktop
    - desktop-apps
    - snap_classic

# - name: Install zPrezto
#   script: files/installPrezto.sh
#   tags:
#     - cli
#     - shell-plugins
#     - prezto

- name: Install Vivaldi Browser
  become: true
  dnf:
    name: "{{ VIVALDI_URL }}/vivaldi-stable-{{ vivaldi_version }}.x86_64.rpm"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - vivaldi

- name: Install Atom editor
  become: true
  dnf:
    name: "{{ ATOM_URL }}"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - atom

- name: Install BoostNote notepad
  become: true
  dnf:
    name: "{{ BOOSTNOTE_URL }}"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - boostnote

- name: Install GitKraken app
  become: true
  dnf:
    name: "{{ GITKRAKEN_URL }}"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - gitkraken

- name: Create "Applications" directory
  become: false
  file:
    path: "/home/{{ ansible_env.USER }}/Applications/"
    state: directory
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: '0755'
  tags:
    - cli
    - apps_dir

- name: Download and unarchive Jetbrains Toolbox
  unarchive:
    src: https://download.jetbrains.com/toolbox/jetbrains-toolbox-1.19.7784.tar.gz
    dest: "{{ ansible_env.HOME }}/Applications/"
    remote_src: true
  tags:
    - desktop
    - dev-tools
    - toolbox

- name: Install Skype app
  become: true
  dnf:
    name: "{{ SKYPE_URL }}"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - skype

- name: Install Zoom app
  become: true
  dnf:
    name: "{{ ZOOM_URL }}"
    state: present
    update_cache: true
    disable_gpg_check: true
  tags:
    - desktop
    - desktop-apps
    - zoom

- name: Download and unarchive AWSCli 2
  unarchive:
    src: "{{ AWSCLI_URL }}"
    dest: "/tmp/"
    remote_src: true
  tags:
    - cli
    - dev-tools
    - awscli

- name: Install AWSCli 2
  command: /tmp/aws/install -i "{{ ansible_env.HOME }}"/Applications/aws -b /usr/local/bin
  become: true
  tags:
    - cli
    - dev-tools
    - awscli

- name: Download and unarchive EKSCTL
  become: true
  unarchive:
    src: "{{ EKSCTL_URL }}"
    dest: "/usr/local/bin"
    remote_src: true
  tags:
    - cli
    - dev-tools
    - eksctl

- name: Install Krew
  ansible.builtin.script:
    cmd: files/installKrew.sh
  tags:
    - cli
    - dev-tools
    - krew

- name: install K9s
  become: true
  unarchive:
    src: "{{ K9S_URL }}"
    dest: "/usr/local/bin"
    remote_src: true
  tags:
    - cli
    - dev-tools
    - k9s
